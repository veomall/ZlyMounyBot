import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_ADMIN_CHAT_ID = int(os.getenv("TELEGRAM_ADMIN_CHAT_ID"))

twitter_client_instance = None
user_states = {}  # {user_id: tweet_id}

def set_twitter_client(client):
    global twitter_client_instance
    twitter_client_instance = client

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id == TELEGRAM_ADMIN_CHAT_ID:
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    action, tweet_id = query.data.split('|')

    if action == 'reply_dove':
        success = await twitter_client_instance.reply_to_tweet(tweet_id, "üïäÔ∏è")
        status = "‚úÖ –û—Ç–≤–µ—Ç üïäÔ∏è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω." if success else "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏."
        await query.edit_message_text(text=f"{query.message.text}\n\n---\n{status}")

    elif action == 'reject':
        await query.edit_message_text(text=f"{query.message.text}\n\n---\nüö´ –û—Ç–∫–ª–æ–Ω–µ–Ω–æ.")

    elif action == 'custom_reply':
        user_id = query.from_user.id
        user_states[user_id] = tweet_id
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç —Ç–≤–∏—Ç:")
        await query.edit_message_text(text=f"{query.message.text}\n\n---\n‚úçÔ∏è –û–∂–∏–¥–∞—é –≤–∞—à —Ç–µ–∫—Å—Ç...")

async def handle_custom_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in user_states:
        tweet_id = user_states.pop(user_id)
        custom_text = update.message.text
        
        await update.message.reply_text(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–∏—Ç {tweet_id}...")
        success = await twitter_client_instance.reply_to_tweet(tweet_id, custom_text)
        status = "‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω." if success else "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏."
        await update.message.reply_text(status)

async def send_for_approval(tweet):
    tweet_link = f"https://twitter.com/{tweet.user_screen_name}/status/{tweet.id}"
    keyboard = [
        [InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å üïäÔ∏è", callback_data=f'reply_dove|{tweet.id}')],
        [InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç ‚úçÔ∏è", callback_data=f'custom_reply|{tweet.id}')],
        [InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå", callback_data=f'reject|{tweet.id}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    message_text = (
        f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–ª–∏–Ω–Ω—ã–π —Ç–≤–∏—Ç (>5 —Å–ª–æ–≤).\n\n"
        f"**–ê–≤—Ç–æ—Ä:** {tweet.user_name} (@{tweet.user_screen_name})\n"
        f"**–¢–µ–∫—Å—Ç:**\n{tweet.text}\n\n"
        f"üîó **–°—Å—ã–ª–∫–∞:** {tweet_link}"
    )
    await application.bot.send_message(
        TELEGRAM_ADMIN_CHAT_ID,
        message_text,
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
application.add_handler(CommandHandler("start", start))
application.add_handler(CallbackQueryHandler(button_callback))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_custom_reply))